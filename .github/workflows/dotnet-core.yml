name: Docker Buildpoi Image CI

on:
  push:
    branches: [ master ]
    
    paths-ignore:  
    - 'apis/users-java/**'

jobs:
  sonarcloud:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: edc870e963b6333e823872879bfc264e3fe5fb03
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"shivamr3_openhack-devops-teams" /o:"openhackkey" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  build-and-deploy:
   defaults:
    run:
     shell: bash
     working-directory: ./apis/poi/web
    
   runs-on: ubuntu-latest
   needs: [sonarcloud]
  
   steps:
   - name: Check out
     uses: actions/checkout@v2

   - name: Build Info
     run: echo $GITHUB_RUN_NUMBER  
   
   - name: 'Build and push image'
     uses: azure/docker-login@v1
     with:
  #    login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #    username: ${{ secrets.REGISTRY_USERNAME }}
  #    password: ${{ secrets.REGISTRY_PASSWORD }}
      login-server: openhackwpn4z9r3acr.azurecr.io
      username: openhackwpn4z9r3acr
      password: ucnxBfwSNPHKcjyXKEZ/gQ9gETy3d2xJ
   - run: | 
      docker build . -t openhackwpn4z9r3acr.azurecr.io/2/api-poi:$GITHUB_RUN_NUMBER
      docker push openhackwpn4z9r3acr.azurecr.io/2/api-poi:$GITHUB_RUN_NUMBER
   
   - name: 'Login via Azure CLI'
     uses: azure/login@v1
     with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
   
   - name: 'WebApp Deployment'
     uses: azure/CLI@v1
     with:
       inlineScript: |  
        az webapp config container set --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg --docker-custom-image-name "openhackwpn4z9r3acr.azurecr.io/2/api-poi:$GITHUB_RUN_NUMBER" --docker-registry-server-url openhackwpn4z9r3acr.azurecr.io --docker-registry-server-user openhackwpn4z9r3acr --docker-registry-server-password ucnxBfwSNPHKcjyXKEZ/gQ9gETy3d2xJ --slot staging
   - name: Wait for 10 seconds
     uses: jakejarvis/wait-action@v0.1.0
     with:
      time: '1s'
      
   - name: check status code
     uses: wei/curl@v1
     with:
       args: 'https://openhackwpn4z9r3poi-staging.azurewebsites.net/api/healthcheck/poi' 
    
   - name: swap slots
     uses: azure/CLI@v1
     with:
        inlineScript: |
           az webapp deployment slot swap --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg --subscription aa0c7c99-583e-4785-8abb-a69b46abe4ca --slot staging --target-slot production
           
  create_issue:
    needs: build-and-deploy
    if: failure()
    runs-on: ubuntu-latest
    steps: 
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }'
