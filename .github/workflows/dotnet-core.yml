name: Docker Buildpoi Image CI

on:
  push:
    branches: [ master ]
    
    paths-ignore:  
    - 'apis/users-java/**'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    #- name: Autobuild
    #  uses: github/codeql-action/autobuild@v1
    - name: Install dotnet dependencies
      run: dotnet restore apis/poi/poi.sln

    - name: Build dotnet
      run: dotnet build apis/poi/poi.sln --no-restore

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  build-and-deploy:
   defaults:
    run:
     shell: bash
     working-directory: ./apis/poi/web
    
   runs-on: ubuntu-latest
  
   steps:
   - name: Check out
     uses: actions/checkout@v2

   - name: Build Info
     run: echo $GITHUB_RUN_NUMBER  
   
   - name: 'Build and push image'
     uses: azure/docker-login@v1
     with:
  #    login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #    username: ${{ secrets.REGISTRY_USERNAME }}
  #    password: ${{ secrets.REGISTRY_PASSWORD }}
      login-server: openhackwpn4z9r3acr.azurecr.io
      username: openhackwpn4z9r3acr
      password: ucnxBfwSNPHKcjyXKEZ/gQ9gETy3d2xJ
   - run: | 
      docker build . -t openhackwpn4z9r3acr.azurecr.io/2/api-poi:$GITHUB_RUN_NUMBER
      docker push openhackwpn4z9r3acr.azurecr.io/2/api-poi:$GITHUB_RUN_NUMBER
   
   - name: 'Login via Azure CLI'
     uses: azure/login@v1
     with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
   
   - name: 'WebApp Deployment'
     uses: azure/CLI@v1
     with:
       inlineScript: |  
        az webapp config container set --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg --docker-custom-image-name "openhackwpn4z9r3acr.azurecr.io/2/api-poi:$GITHUB_RUN_NUMBER" --docker-registry-server-url openhackwpn4z9r3acr.azurecr.io --docker-registry-server-user openhackwpn4z9r3acr --docker-registry-server-password ucnxBfwSNPHKcjyXKEZ/gQ9gETy3d2xJ --slot staging
   - name: Wait for 10 seconds
     uses: jakejarvis/wait-action@v0.1.0
     with:
      time: '1s'
      
   - name: check status code
     uses: wei/curl@v1
     with:
       args: 'https://openhackwpn4z9r3poi-staging.azurewebsites.net/api/healthcheck/poi' 
    
#   - name: swap slots
#     uses: azure/CLI@v1
#     with:
#        inlineScript: |
#           az webapp deployment slot swap --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg --subscription aa0c7c99-583e-4785-8abb-a69b46abe4ca --slot staging --target-slot production
           
  route_traffic_one_percent:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:    
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }} 
    
    - name: Swap staging to production
      run: |
        az webapp traffic-routing set --distribution staging=1 --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg
      continue-on-error: true
  
  validate_one_percent:
    runs-on: ubuntu-latest
    needs: route_traffic_one_percent
    steps:
    - name: Install Apache Bench
      run: sudo apt-get install  apache2-utils

    - name: Load Test 
      run: | 
        failures=$(ab -t 10 -c 10 https://openhackwpn4z9r3poi.azurewebsites.net/api/version/poi | grep -Poe 'Failed requests: \K.*' | sed 's/^ *//g')
        if [ "$failures" -gt "0" ];then
          exit -1
        fi
      continue-on-error: true
  route_traffic_ten_percent:
      runs-on: ubuntu-latest
      needs: validate_one_percent
      steps:
      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS  }} 
      
      - name: Swap staging to production
        run: |
          az webapp traffic-routing set --distribution staging=10 --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg
        continue-on-error: true
        
  validate_ten_percent:
    runs-on: ubuntu-latest
    needs: route_traffic_ten_percent
    steps:
    - name: Install Apache Bench
      run: sudo apt-get install  apache2-utils

    - name: Load Test 
      run: | 
        failures=$(ab -t 10 -c 10 https://openhackwpn4z9r3poi.azurewebsites.net/api/version/poi | grep -Poe 'Failed requests: \K.*' | sed 's/^ *//g')
        if [ "$failures" -gt "0" ];then
          exit -1
        fi  
      continue-on-error: true
  route_traffic_onehundred_percent:
    runs-on: ubuntu-latest
    needs: validate_ten_percent
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }} 
    
    - name: Swap staging to production
      run: |
        az webapp traffic-routing set --distribution staging=100 --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg
      continue-on-error: true
      
  validate_onhundred_percent:
    runs-on: ubuntu-latest
    needs: route_traffic_onehundred_percent
    steps:
    - name: Install Apache Bench
      run: sudo apt-get install  apache2-utils

    - name: Load Test 
      run: | 
        failures=$(ab -t 10 -c 10 https://openhackwpn4z9r3poi.azurewebsites.net/api/version/poi | grep -Poe 'Failed requests: \K.*' | sed 's/^ *//g')
        if [ "$failures" -gt "0" ];then
          exit -1
        fi       
      continue-on-error: true
  deploy_production:
    runs-on: ubuntu-latest
    needs: validate_onhundred_percent
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}

#    - name: Azure WebApp
#      uses: Azure/webapps-deploy@v2
#      with:
#        app-name: openhackwpn4z9r3poi
#        slot-name: production
#        images: openhackwpn4z9r3acr.azurecr.io/2/api-poi:$GITHUB_RUN_NUMBER
    - name: swap slots
      uses: azure/CLI@v1
      with:
        inlineScript: |
           az webapp deployment slot swap --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg --subscription aa0c7c99-583e-4785-8abb-a69b46abe4ca --slot staging --target-slot production
      
      continue-on-error: true   

  route_all_traffic_production:
    runs-on: ubuntu-latest
    needs: deploy_production
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }} 
    
    - name: Swap staging to production
      run: |
        az webapp traffic-routing set --distribution staging=0 --name openhackwpn4z9r3poi --resource-group openhackwpn4z9r3rg    
      continue-on-error: true
  create_issue:
    needs: build-and-deploy
    if: failure()
    runs-on: ubuntu-latest
    steps: 
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }'
